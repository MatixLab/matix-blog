---
import type { CollectionEntry } from 'astro:content'
import { cn } from '@/lib/utils'
import { Image } from 'astro:assets'
import { ArrowRightIcon, HashIcon } from 'lucide-react'

type Props = {
  entry: CollectionEntry<'post'>
}

const { entry } = Astro.props as {
  entry: CollectionEntry<'post'>
};

// const formattedDate = formatDate(entry.data.pubDate)
// const readTime = readingTime(entry.body)
---

<div
  class={cn(
    'border rounded-xl flex flex-col',
    'justify-between gap-4 hover:bg-accent/60 transition-all',
  )}
>
  <div class="flex flex-col">
    <div
      class="group overflow-hidden relative aspect-auto  transition-all border-b"
    >
      <div class="flex w-full h-full">
        <Image
          loading="lazy"
          class="object-cover size-full rounded-t-xl"
          width={720}
          height={360}
          src={entry.data.cover}
          alt="descriptive text"
          transition:name={`img-${entry.id}`}
        />
        <div
          class="absolute left-2 bottom-2 opacity-100 transition-opacity duration-300"
        >
          <div class="flex flex-col gap-2">
            <div class="flex flex-wrap gap-1">
              {
                entry.data.category.map((cat: string) => {
                  return (
                    <span
                      class="text-xs font-medium text-white bg-black bg-opacity-50 px-2 py-1 rounded-md"
                    >
                      {cat}
                    </span>
                  )
                })
              }
            </div>
          </div>
        </div>
      </div>
      <!--
        <a
        class={cn(
          'absolute inset-0 flex items-center justify-center bg-black  bg-opacity-0 group-hover:bg-opacity-50 transition-opacity duration-300',
        )}
        href={`/post/${entry.id}/`}
      >
        <span
          class="text-white text-lg font-semibold opacity-0 group-hover:opacity-80 transition-opacity duration-1000"
        >
          Read More
        </span>
      </a>
      -->
    </div>
  </div>
  <a class="flex flex-col gap-4 group" href={`/post/${entry.id}/`}>
    <div class="px-4 flex flex-col gap-4">
      <div class="flex items-center justify-between gap-4">
        <h2
          class="flex-1 text-xl line-clamp-1 flex items-center gap-2 text-ds-gray-1000"
          transition:name={`title-${entry.id}`}
        >
          {entry.data.title}
        </h2>
        <div
          class="flex items-center justify-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
        >
          <span class="text-xs text-ds-gray-800">Details</span>
          <ArrowRightIcon className="size-4 text-xs font-mono text-ds-gray-800" />
        </div>
      </div>
      <p class="text-sm line-clamp-2 leading-relaxed min-h-[1rem] text-ds-gray-800">
        {entry.data.description}
      </p>
    </div>
  </a>

  <div class="px-4 pb-2 flex justify-end items-center">
    <div class="flex flex-wrap gap-2 items-center">
      {
        entry.data.category.map((cat) => {
          return (
            <a
              class="flex items-center justify-center space-x-0.5 group"
              href={`/post/category/${cat}`}
              transition:name={`badge-cat-${entry.id}`}
            >
              <HashIcon className="size-3 text-ds-gray-800 hover:scale-150 duration-150 ease-in-out"></HashIcon>
              <span class={cn(
                'text-sm  text-ds-gray-800 link',
              )}
              >{cat}</span>
            </a>
          )
        })
      }
    </div>
  </div>
  <!-- <div class="px-4 flex">
    <span
      class="text-muted-foreground"
      transition:name={`date-${entry.id}`}
    >
      {formatDate(entry.data.pubDate)}
    </span>
  </div> -->
</div>
