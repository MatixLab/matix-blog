---
import type { PaginateFunction } from 'astro'
import { PaginationBar } from '@/components/common/PaginationBar'
import { siteConfig } from '@/config/site'
import { getShorts } from '@/lib/fetchers'
import { type CollectionEntry } from 'astro:content'
import ShortList from './_components/ShortList.astro'
import ShortLayout from './_layout/ShortLayout.astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const allShorts = await getShorts()
  return paginate(
    allShorts,
    {
      pageSize: siteConfig.pagination.pageSize,
    },
  )
}

const { page } = Astro.props
const shorts: {
  [prop: string]: CollectionEntry<'short'>[]
} = {}

page.data.forEach((short) => {
  const year = short.data.pubDate.getFullYear()
  if (!shorts[year]) {
    shorts[year] = []
  }
  shorts[year].push(short)
})
const years = Object.keys(shorts).sort((a, b) => {
  return Number(b) - Number(a)
})
---
<ShortLayout
  title="Shorts"
  description="Writing record."
>
  <div slot="right-content">
    <section class="ml-1 pt-8">
      <ShortList years={years} shorts={shorts} />
      {
        page.data.length && page.data.length > siteConfig.pagination.pageSize
        ? (
          <div class="mt-6">
            <PaginationBar
              currentPage={page.currentPage}
              totalPages={page.lastPage}
              baseUrl="/short/"
              client:load
            />
          </div>
        )
        : null
      }
    </section>
  </div>
</ShortLayout>
