---
import type { ResourceItem } from '@/types'
import MainLayout from '@/layouts/MainLayout.astro'
import { ArrowUpLeft } from 'lucide-react'
import { uses } from './_data'

const useTypes = Object.keys(uses)
---

<MainLayout
  title="Uses"
  description="Things of Choice."
>
  <section class="prose dark:prose-invert container max-w-[948px] relative flex w-full flex-col">
    <main class="grid grid-cols-1 gap-2 md:gap-4 md:grid-cols-5">
      <div class="md:col-span-1 rounded-lg hidden md:block">
        <aside class="hidden md:block fixed pt-12">
          <!-- toc -->
          <span
            title="back"
            onclick="history.back()"
            class="absolute top-16 hidden xl:inline-flex hover:cursor-pointer"
          >
            <ArrowUpLeft className="mr-2 size-4 my-auto text-ds-gray-800" />
            <span
              class:list={[
                'text-sm text-ds-gray-800 underline underline-offset-4',
                'decoration-ds-gray-600 hover:decoration-ds-gray-900',
              ]}
            >Back</span>
          </span>
        </aside>
      </div>
      <article class="md:col-span-4 overflow-auto pt-2 md:pt-8">
        <h1 class="mt-2 scroll-m-20 text-2xl font-bold tracking-tight">
          Things of Choice.
        </h1>
        {
          useTypes.map((type) => {
            return (
              <h2 class="mt-10 scroll-m-20 text-xl font-semibold tracking-tight first:mt-0">{type}</h2>
              <ul class="my-2 ml-1 list-disc">
                {
                  uses[type].map((item: ResourceItem) => {
                    return (
                      item.url
                        ? (
                          <li class="mt-2">
                            <a
                              href={`${item.url}?ref=huakucha.top`}
                              target="_blank"
                              title={item.title}
                              rel="noopener noreferrer"
                              class="break-words after:content-['_↗'] text-ds-gray-1000 after:text-ds-gray-1000"
                            >
                              <span
                                class:list={[
                                  'font-medium text-ds-gray-1000 underline underline-offset-4',
                                  'decoration-ds-gray-500 hover:decoration-ds-gray-800',
                                ]}
                              >
                                {item.title}
                              </span>
                            </a>
                            {
                              item.desc && <span class="text-sm text-ds-gray-1000"> — For {item.desc}</span>
                            }
                          </li>
                        )
                        : (
                          <li class="mt-2">
                            <span class="font-medium text-ds-gray-1000">
                              {item.title}
                            </span>
                            {
                              item.desc && <span class="text-sm text-ds-gray-1000"> — For {item.desc}</span>
                            }
                          </li>
                        )
                    )
                  })
                }
              </ul>
            )
          })
        }
      </article>
    </main>
  </section>
</MainLayout>
