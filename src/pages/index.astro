---
import { siteConfig } from '@/config/site'
import MainLayout from '@/layouts/MainLayout.astro'
import { getPosts } from '@/lib/fetchers'
import { cn, formatSimpleDate } from '@/lib/utils'
import { type CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'
import { domAnimation, LazyMotion } from 'framer-motion'

let allPosts = await getPosts()

if (allPosts.length > siteConfig.home.postNum) {
  allPosts = allPosts.slice(0, siteConfig.home.postNum)
}

const posts: {
  [prop: string]: CollectionEntry<'blog'>[]
} = {}
allPosts.forEach((ele) => {
  const year = ele.data.pubDate.getFullYear()
  if (!posts[year])
posts[year] = []
  posts[year].push(ele)
})
const years = Object.keys(posts).sort((a, b) => {
  return Number(b) - Number(a)
});
---

<MainLayout
  title="About"
  description="Anthony's homepage"
  bgType="default"
  bgClass="dark:bg-transparent"
>
  <div id="scroll-area" class="scrollable-area container relative flex w-full flex-col">
    <div class="flex w-full px-6 py-4 lg:px-8 lg:py-12">
      <div class="mx-auto w-full lg:mb-0 lg:max-w-3xl">
        <div class="space-y-2">
          <div class="text-ds-gray-1000">
            <p>Hey ðŸ‘‹ I'm AnthonyZhu.</p>
            <p class="pt-4">
              You can find me on:
            </p>
          </div>
          <div class="flex space-x-8 ml-4">
            <a href={siteConfig.links.github} target="_blank" aria-label="github">
              <Icon name="simple-icons:github" class="size-5 inline-flex opacity-50 hover:opacity-100" />
            </a>
            <a href={siteConfig.links.twitter} target="_blank" aria-label="x">
              <Icon name="simple-icons:x" class="size-5 inline-flex opacity-50 hover:opacity-100" />
            </a>
          </div>
        </div>
        <hr class="my-4 w-20 mx-auto" />
        <div class="mb-4 flex justify-between">
          <p class="font-bold">
            Recent posts
          </p>

            <a
              href="/blog"
              class={cn(
              'text-ds-gray-700 text-xs underline underline-offset-4 decoration-[0.1px] decoration-ds-gray-700',
              'hover:text-ds-gray-1000/80 hover:decoration-[1.2px]',
            )}
            >
              View all
            </a>

        </div>
        <LazyMotion features={domAnimation}>
          <div class="text-sm">
            <div class="grid grid-cols-6 py-2 font-medium text-ds-gray-900">
              <span class="col-span-1 hidden text-left md:grid">Year</span>
              <span class="col-span-6 md:col-span-5">
                <span class="grid grid-cols-4 items-center md:grid-cols-8">
                  <span class="col-span-1 text-left">Date</span>
                  <span class="col-span-2 md:col-span-6">Title</span>
                </span>
              </span>
            </div>

            <div class="group/list-wrapper">
              {
                years.map((year: string) => {
                  const postsData = posts[year]
                  return (
                    <ul class="group/list list-none">
                      {postsData.map((item, itemIndex) => {
                        return (
                          <li class="group/list-item grid grid-cols-6 p-0 group-hover/list-wrapper:text-gray-300">
                            <span
                              class={cn(
                                'pointer-events-none col-span-1 hidden items-center tabular-nums transition-colors duration-300',
                                ' group-hover/list:text-gray-900 md:grid dark:group-hover/list:text-ds-gray-500',
                                itemIndex === 0 && 'border-t border-gray-200',
                              )}
                            >
                              {itemIndex === 0 ? year : ''}
                            </span>
                            <a
                              href={`/blog/${item.slug}`}
                              class={cn(
                                'col-span-6 group-hover/list-item:text-gray-900 md:col-span-5',
                                'dark:group-hover/list-item:text-ds-gray-500',
                              )}
                            >
                              <span class="grid grid-cols-4 items-center  gap-2 border-t border-gray-200 py-4 md:grid-cols-8">
                                <span class="col-span-1 text-left tabular-nums">
                                  <time
                                    datetime={item.data.pubDate.toDateString()}
                                    class="hidden md:block"
                                  >
                                    {formatSimpleDate(item.data.updatedDate)}
                                  </time>
                                  <time
                                    datetime={item.data.pubDate.toDateString()}
                                    class="md:hidden"
                                  >
                                    {formatSimpleDate(item.data.updatedDate)}
                                  </time>
                                </span>
                                <span
                                  class="col-span-2 line-clamp-4 md:col-span-6"
                                  transition:name={`title-${item.slug}`}
                                >
                                  {item.data.title}
                                </span>
                              </span>
                            </a>
                          </li>
                        )
                      })}
                    </ul>
                  )
                })
              }
            </div>
          </div>
        </LazyMotion>
      </div>
    </div>
  </div>
</MainLayout>

<style>
  .scrollable-area {
    @apply h-full overflow-y-auto overflow-x-hidden;
  }
</style>
